$date
	Sun Mar 09 20:25:11 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module PE_new_tb $end
$var wire 32 ! weight2 [31:0] $end
$var wire 32 " weight1 [31:0] $end
$var wire 32 # weight0 [31:0] $end
$var wire 32 $ psum2 [31:0] $end
$var wire 32 % psum1 [31:0] $end
$var wire 32 & psum0 [31:0] $end
$var wire 1 ' load_weight $end
$var wire 1 ( load_iact $end
$var wire 32 ) iact4 [31:0] $end
$var wire 32 * iact3 [31:0] $end
$var wire 32 + iact2 [31:0] $end
$var wire 32 , iact1 [31:0] $end
$var wire 32 - iact0 [31:0] $end
$var reg 1 . clk $end
$var reg 32 / iact [31:0] $end
$var reg 4 0 iact_size [3:0] $end
$var reg 4 1 kernel_size [3:0] $end
$var reg 1 2 rst_n $end
$var reg 32 3 weight [31:0] $end
$scope module dut $end
$var wire 1 . clk $end
$var wire 32 4 iact [31:0] $end
$var wire 32 5 iact0 [31:0] $end
$var wire 32 6 iact1 [31:0] $end
$var wire 32 7 iact2 [31:0] $end
$var wire 32 8 iact3 [31:0] $end
$var wire 32 9 iact4 [31:0] $end
$var wire 4 : iact_size [3:0] $end
$var wire 4 ; kernel_size [3:0] $end
$var wire 32 < psum0 [31:0] $end
$var wire 32 = psum1 [31:0] $end
$var wire 32 > psum2 [31:0] $end
$var wire 1 2 rst_n $end
$var wire 32 ? weight [31:0] $end
$var wire 32 @ weight0 [31:0] $end
$var wire 32 A weight1 [31:0] $end
$var wire 32 B weight2 [31:0] $end
$var reg 4 C cnt_iact [3:0] $end
$var reg 4 D cnt_iact_size [3:0] $end
$var reg 4 E cnt_kernel_size [3:0] $end
$var reg 4 F cnt_weight [3:0] $end
$var reg 4 G index_out [3:0] $end
$var reg 1 ( load_iact $end
$var reg 1 ' load_weight $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
b0 ?
bx >
bx =
bx <
b11 ;
b101 :
bx 9
bx 8
bx 7
bx 6
bx 5
b0 4
b0 3
12
b11 1
b101 0
b0 /
0.
bx -
bx ,
bx +
bx *
bx )
x(
x'
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5000
0(
b0 C
0'
b0 F
b0 G
b0 D
b0 E
b0 $
b0 >
b0 %
b0 =
b0 &
b0 <
02
1.
#10000
12
0.
#15000
b1 F
b10 #
b10 @
b1 C
b1 -
b1 5
b1 /
b1 4
b10 3
b10 ?
1.
#20000
0.
#25000
b10 C
b10 ,
b10 6
b10 F
b11 "
b11 A
1.
b10 /
b10 4
b11 3
b11 ?
#30000
0.
#35000
b11 F
b100 !
b100 B
b11 C
b11 +
b11 7
1.
b11 /
b11 4
b100 3
b100 ?
#40000
0.
#45000
b100 C
b100 *
b100 8
1'
1.
b100 /
b100 4
#50000
0.
#55000
b101 C
b101 )
b101 9
1.
b101 /
b101 4
#60000
0.
#65000
1(
1.
#70000
0.
#75000
b1 D
b1 E
b10 &
b10 <
1.
#80000
0.
#85000
b10 D
b10 E
b1000 &
b1000 <
1.
#90000
0.
#95000
b11 D
b11 E
b10100 &
b10100 <
1.
#100000
0.
#105000
b1 D
b0 E
b1 G
1.
#110000
0.
#115000
b10 D
b1 E
b100 %
b100 =
1.
#120000
0.
#125000
b11 D
b10 E
b1101 %
b1101 =
1.
#130000
0.
#135000
b100 D
b11 E
b11101 %
b11101 =
1.
#140000
0.
#145000
b10 D
b0 E
b10 G
1.
#150000
0.
#155000
b11 D
b1 E
b110 $
b110 >
1.
#160000
0.
#165000
b100 D
b10 E
b10010 $
b10010 >
1.
#170000
0.
#175000
b101 D
b11 E
b100110 $
b100110 >
1.
#180000
0.
#185000
b11 D
b0 E
b11 G
1.
#190000
0.
#195000
b100 D
b1 E
1.
#200000
0.
#205000
b101 D
b10 E
1.
#210000
0.
#215000
b110 D
b11 E
1.
#220000
0.
#225000
1.
#230000
0.
#235000
1.
#240000
0.
#245000
1.
#250000
0.
#255000
1.
